<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc.xsd ">
    
    <!-- 自动搜索@Controller标注的类，包括其下面的子包 -->
    <context:component-scan base-package="com.yklis.yklis.controller" />
    
    <!-- 自动注册DefaultAnnotationHandlerMapping、AnnotationMethodHandlerAdapter两个bean -->
    <!-- 是spring MVC为@Controllers分发请求所必须的 -->
    <!-- 并提供了：数据绑定支持，@NumberFormatannotation支持，@DateTimeFormat支持，@Valid支持，读写XML的支持（JAXB），读写JSON的支持（Jackson） -->
    <!-- <mvc:annotation-driven /> -->
    <mvc:annotation-driven >
        <!-- 消息转换器 -->
        <!-- 解决注解@ResponseBody返回中文乱码问题,示例方法querySqsydw -->
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes" value="text/html;charset=UTF-8"/>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    
    <!-- 使servlet(dispatcher)不拦截这些静态资源文件 -->
    <!-- 如果不加这句，页面上引用的css、js等文件将无法加载 -->
    <mvc:resources mapping="/static/**" location="/static/" />
    <mvc:resources mapping="/CLodop_Setup_for_Win32NT.exe" location="/" />
    <mvc:resources mapping="/install_lodop32.exe" location="/" />
    <mvc:resources mapping="/install_lodop64.exe" location="/" />
    
    <mvc:resources mapping="/html/**" location="/WEB-INF/html/" />
    <mvc:default-servlet-handler />
    
    <!-- SSM框架集成了JSP的同时，如何集成HTML
              一、通过controller返回对应的html页面
    1.1 后端
    dispatcher-servlet.xml中配置html视图解析器FreeMarkerConfigurer
    1.2 前端
    html中引用的js、css等用绝对路径，如:/项目名/js/xx.js
              二、直接访问项目中的html页面
    1.1 后端
    <mvc:resources mapping="/html/**" location="/WEB-INF/html/" />
    dispatcher-servlet.xml中配置<mvc:default-servlet-handler />
    1.2 前端
              把html文件放在WEB-INF/html/下，访问路径如http://localhost:8080/项目名称/html/siteMap.html
    html中引用的js、css等用相对路径 -->

    <!-- html视图解析器必须先配置freemarkerConfig,注意html是没有prefix前缀属性的-->
    <!-- <bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath">
            <value>/WEB-INF/pages/</value>
        </property> -->
        <!-- 解决HTML页面中文乱码问题 -->
        <!-- <property name="freemarkerSettings"> 
	        <props>
	            <prop key="defaultEncoding">UTF-8</prop> 
	        </props>
        </property>
    </bean>
    <bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver"> -->
       <!-- 解决HTML页面中文乱码问题 -->
       <!-- <property name="contentType" value="text/html;charset=UTF-8" />
       <property name="suffix" value=".html" />
    </bean> -->
   
    <!-- 配置不同类型视图解析器时,InternalResourceViewResolver必须放在最后 -->
    <!-- 配置视图解析器，将ModelAndView及字符串解析为具体的页面 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/pages/" />
		<property name="suffix" value=".jsp"></property>
	</bean>
	
	<!-- 基于@aspectJ切面的驱动器,自动为Spring容器中@aspectJ切面的bean创建代理，织入切面 -->
    <!-- <aop:aspectj-autoproxy/>的属性proxy-target-class，默认为false,表示使用JDK动态代理织入增强，true表示使用CGLib动态代理技术织入增强
              不过即使为false,如果目标类没有声明接口，则Spring也自动使用CGLib动态代理 -->
    <aop:aspectj-autoproxy/>
    <!-- 使用@aspectJ注解的切面类 -->
    <bean class="com.yklis.yklis.util.AspectCtlLog" />
    	
</beans>